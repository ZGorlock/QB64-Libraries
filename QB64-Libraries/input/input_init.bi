'declare input sub/func
DECLARE SUB DRAWKEYBOARD (handle AS INTEGER)
DECLARE SUB GETINPUT ()
DECLARE SUB GETMOUSEINPUT ()
DECLARE SUB HIDEKEYBOARD (handle AS INTEGER)
DECLARE SUB KEYBOARDFREE (handle AS INTEGER)
DECLARE SUB KEYBOARDSETCOLOR (handle AS INTEGER, frame AS _UNSIGNED LONG, l AS _UNSIGNED LONG, f AS _UNSIGNED LONG, lh AS _UNSIGNED LONG, fh AS _UNSIGNED LONG, la AS _UNSIGNED LONG, fa AS _UNSIGNED LONG)
DECLARE SUB PUTKEYBOARD (x AS LONG, y AS LONG, handle AS INTEGER, dest AS LONG)
DECLARE SUB SHOWKEYBOARD (handle AS INTEGER)
DECLARE SUB UPDATEHOTKEYS ()
DECLARE FUNCTION AKEY` (x AS _BYTE)
DECLARE FUNCTION ALT` ()
DECLARE FUNCTION APK` ()
DECLARE FUNCTION BSP` ()
DECLARE FUNCTION CHAR~%% ()
DECLARE FUNCTION CKEY` (x AS _BYTE)
DECLARE FUNCTION CLICK` ()
DECLARE FUNCTION CLICKOLD` ()
DECLARE FUNCTION CLICKCHANGE` ()
DECLARE FUNCTION CLK` ()
DECLARE FUNCTION CTR` ()
DECLARE FUNCTION DKEY` (x AS _BYTE)
DECLARE FUNCTION DLK` ()
DECLARE FUNCTION EDK` ()
DECLARE FUNCTION ESC` ()
DECLARE FUNCTION EXK` ()
DECLARE FUNCTION FKEY` (x AS _BYTE)
DECLARE FUNCTION FKEY_A` (x AS _BYTE)
DECLARE FUNCTION FKEY_C` (x AS _BYTE)
DECLARE FUNCTION FKEY_S` (x AS _BYTE)
DECLARE FUNCTION HLK` ()
DECLARE FUNCTION HME` ()
DECLARE FUNCTION INS` ()
DECLARE FUNCTION ISINPUT` ()
DECLARE FUNCTION KEYBOARDHIT% (handle AS INTEGER)
DECLARE FUNCTION KEYBOARDINPUT` ()
DECLARE FUNCTION KEYBOARDNEW% (layoutfile AS STRING, keywidth AS INTEGER, status AS _BYTE)
DECLARE FUNCTION KEYBOARDSTATUS` (handle AS INTEGER)
DECLARE FUNCTION KEYX` (x AS _UNSIGNED _BYTE)
DECLARE FUNCTION LASTGETINPUT! ()
DECLARE FUNCTION LASTINPUT~& ()
DECLARE FUNCTION LCLICK` ()
DECLARE FUNCTION LCLICKOLD` ()
DECLARE FUNCTION LKEY%% (x AS _BYTE)
DECLARE FUNCTION MCLICK` ()
DECLARE FUNCTION MCLICKOLD` ()
DECLARE FUNCTION MOUSESCREENX& ()
DECLARE FUNCTION MOUSESCREENY& ()
DECLARE FUNCTION MOUSEWHEEL%% ()
DECLARE FUNCTION MOUSEX& ()
DECLARE FUNCTION MOUSEY& ()
DECLARE FUNCTION MOVEMOUSE` ()
DECLARE FUNCTION NLK` ()
DECLARE FUNCTION NTK` ()
DECLARE FUNCTION NUM%% ()
DECLARE FUNCTION NUM_A` (x AS _BYTE)
DECLARE FUNCTION OSC` ()
DECLARE FUNCTION PAK` ()
DECLARE FUNCTION PAD_C` (x AS _BYTE)
DECLARE FUNCTION PDN` ()
DECLARE FUNCTION PPK` ()
DECLARE FUNCTION PRK` ()
DECLARE FUNCTION PSK` ()
DECLARE FUNCTION PTK` ()
DECLARE FUNCTION PUP` ()
DECLARE FUNCTION RCLICK` ()
DECLARE FUNCTION RCLICKOLD` ()
DECLARE FUNCTION RTN` ()
DECLARE FUNCTION SBK` ()
DECLARE FUNCTION SFT` ()
DECLARE FUNCTION SLE` ()
DECLARE FUNCTION SLK` ()
DECLARE FUNCTION SMK` ()
DECLARE FUNCTION SPK` ()
DECLARE FUNCTION STK` ()
DECLARE FUNCTION TBK` ()
DECLARE FUNCTION VALIDKEYBOARD` (handle AS INTEGER)
DECLARE FUNCTION VDK` ()
DECLARE FUNCTION VMK` ()
DECLARE FUNCTION VUK` ()
DECLARE FUNCTION WNK` ()
DECLARE FUNCTION ZMK` ()

'primary windows type declarations
TYPE LPPOINT
    x AS _UNSIGNED LONG
    y AS _UNSIGNED LONG
END TYPE

'windows type declarations
TYPE LASTINPUTINFO
    cbSize AS _UNSIGNED LONG
    dwTime AS _UNSIGNED LONG
END TYPE

'input type declarations
TYPE HOTKEY
    help AS _BYTE
    close AS _BYTE
    screenshot AS _BYTE
    windowshot AS _BYTE
    fullscreen AS _BYTE
    help_clock AS SINGLE
    close_clock AS SINGLE
    screenshot_clock AS SINGLE
    windowshot_clock AS SINGLE
    fullscreen_clock AS SINGLE
    intimer AS LONG
    outtimer AS LONG
END TYPE
TYPE KEYBOARD
    inuse AS _BYTE
    status AS _BYTE
    loc AS STRING * 128
    x AS LONG
    y AS LONG
    hit AS INTEGER
    shift AS _BYTE
    caps AS _BYTE
    click AS INTEGER
    framecolor AS _UNSIGNED LONG
    lettercolor AS _UNSIGNED LONG
    fillcolor AS _UNSIGNED LONG
    lettercolor_hover AS _UNSIGNED LONG
    fillcolor_hover AS _UNSIGNED LONG
    lettercolor_active AS _UNSIGNED LONG
    fillcolor_active AS _UNSIGNED LONG
    keywidth AS INTEGER
    dest AS LONG
    rows AS _UNSIGNED _BYTE
    cols AS _UNSIGNED _BYTE
    width AS LONG
    height AS LONG
END TYPE
TYPE MOUSEIN
    x AS SINGLE
    y AS SINGLE
    screenx AS SINGLE
    screeny AS SINGLE
    click AS _BYTE
    lclick AS _BYTE
    rclick AS _BYTE
    mclick AS _BYTE
    oldclick AS _BYTE
    oldlclick AS _BYTE
    oldrclick AS _BYTE
    oldmclick AS _BYTE
    wheel AS INTEGER
    oldx AS SINGLE
    oldy AS SINGLE
    oldscreenx AS SINGLE
    oldscreeny AS SINGLE
END TYPE

'input constant definitions
CONST AKEY_A = 1
CONST AKEY_B = 2
CONST AKEY_C = 3
CONST AKEY_D = 4
CONST AKEY_E = 5
CONST AKEY_F = 6
CONST AKEY_G = 7
CONST AKEY_H = 8
CONST AKEY_I = 9
CONST AKEY_J = 10
CONST AKEY_K = 11
CONST AKEY_L = 12
CONST AKEY_M = 13
CONST AKEY_N = 14
CONST AKEY_O = 15
CONST AKEY_P = 16
CONST AKEY_Q = 17
CONST AKEY_R = 18
CONST AKEY_S = 19
CONST AKEY_T = 20
CONST AKEY_U = 21
CONST AKEY_V = 22
CONST AKEY_W = 23
CONST AKEY_X = 24
CONST AKEY_Y = 25
CONST AKEY_Z = 26
CONST CKEY_A = 1
CONST CKEY_B = 2
CONST CKEY_C = 3
CONST CKEY_D = 4
CONST CKEY_E = 5
CONST CKEY_F = 6
CONST CKEY_G = 7
CONST CKEY_H = 8
CONST CKEY_I = 9
CONST CKEY_J = 10
CONST CKEY_K = 11
CONST CKEY_L = 12
CONST CKEY_M = 13
CONST CKEY_N = 14
CONST CKEY_O = 15
CONST CKEY_P = 16
CONST CKEY_Q = 17
CONST CKEY_R = 18
CONST CKEY_S = 19
CONST CKEY_T = 20
CONST CKEY_U = 21
CONST CKEY_V = 22
CONST CKEY_W = 23
CONST CKEY_X = 24
CONST CKEY_Y = 25
CONST CKEY_Z = 26
CONST DKEY_UP = 1
CONST DKEY_LEFT = 2
CONST DKEY_RIGHT = 3
CONST DKEY_DOWN = 4
CONST F1 = 1
CONST F2 = 2
CONST F3 = 3
CONST F4 = 4
CONST F5 = 5
CONST F6 = 6
CONST F7 = 7
CONST F8 = 8
CONST F9 = 9
CONST F10 = 10
CONST F11 = 11
CONST F12 = 12
CONST HOTKEYWAIT = 1
CONST KEYBOARD_ALLKEYBOARDS = TRUE
CONST KEYBOARD_DEFAULTCOLOR_FILL = 4278190080
CONST KEYBOARD_DEFAULTCOLOR_FILL_ACTIVE = 4289243304
CONST KEYBOARD_DEFAULTCOLOR_FILL_HOVER = 4283716692
CONST KEYBOARD_DEFAULTCOLOR_FRAME = 4294769916
CONST KEYBOARD_DEFAULTCOLOR_LETTER = 4289243304
CONST KEYBOARD_DEFAULTCOLOR_LETTER_ACTIVE = 4278190080
CONST KEYBOARD_DEFAULTCOLOR_LETTER_HOVER = 4294769916
CONST KEYBOARD_DEFAULTKEYWIDTH = 32
CONST KEYBOARD_HIDE = FALSE
CONST KEYBOARD_SHOW = TRUE
CONST LKEY_CAPS = 1
CONST LKEY_NUM = 2
CONST LKEY_SCROLL = 3

'dimension shared variables
DIM SHARED Keyd AS _UNSIGNED _BYTE
DIM SHARED ScrollMultiplier AS _BYTE
DIM SHARED InputTime AS SINGLE
DIM SHARED MouseSwap AS LONG
DIM SHARED K AS STRING
DIM SHARED Hotkeys AS HOTKEY
DIM SHARED MInput AS MOUSEIN
DIM SHARED LastInputData AS LASTINPUTINFO

'dimension shared arrays
REDIM keyboards(1 TO 0) AS KEYBOARD
REDIM keyboardlayouts(1 TO 2, 1 TO 128, 1 TO 128, 1 TO 0) AS INTEGER

'shared variable iniation
ScrollMultiplier = 1

'structure size definition
LastInputData.cbSize = LEN(LastInputData) '8 bytes

'preparation
Hotkeys.intimer = _FREETIMER
Hotkeys.outtimer = _FREETIMER
MouseSwap = GetSystemMetrics(23)
ON TIMER(Hotkeys.outtimer, .05) GOSUB checkhotkeys
ON TIMER(Hotkeys.intimer, .05) UPDATEHOTKEYS
TIMER(Hotkeys.outtimer) ON
TIMER(Hotkeys.intimer) ON