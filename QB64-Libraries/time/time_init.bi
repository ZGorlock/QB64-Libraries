'declare time sub/func
DECLARE SUB CLEARDATE (t AS SYSTEMTIME)
DECLARE SUB CLEARTIME (t AS SYSTEMTIME)
DECLARE SUB CURRENTTIME (t AS SYSTEMTIME)
DECLARE SUB LUNAR_LAST_FULL (t AS SYSTEMTIME)
DECLARE SUB LUNAR_LAST_FULL_X (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE SUB LUNAR_LAST_NEW (t AS SYSTEMTIME)
DECLARE SUB LUNAR_LAST_NEW_X (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE SUB MAKETIME (t AS SYSTEMTIME, y AS INTEGER, m AS _BYTE, d AS _BYTE, h AS _BYTE, n AS _BYTE, s AS _BYTE, f AS INTEGER)
DECLARE SUB LUNAR_NEXT_FULL (t AS SYSTEMTIME)
DECLARE SUB LUNAR_NEXT_FULL_X (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE SUB LUNAR_NEXT_NEW (t AS SYSTEMTIME)
DECLARE SUB LUNAR_NEXT_NEW_X (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE SUB REPAIRTIME (t AS SYSTEMTIME)
DECLARE SUB TIMEAFTER (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME, y AS INTEGER, m AS _BYTE, d AS _BYTE, h AS _BYTE, n AS _BYTE, s AS _BYTE)
DECLARE SUB TIMEBEFORE (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME, y AS INTEGER, m AS _BYTE, d AS _BYTE, h AS _BYTE, n AS _BYTE, s AS _BYTE)
DECLARE SUB TIMEBETWEEN (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME, t3 AS SYSTEMTIME)
DECLARE FUNCTION AMPM` ()
DECLARE FUNCTION AMPM_X` (t AS SYSTEMTIME)
DECLARE FUNCTION ASTROLOGICALAGE$ ()
DECLARE FUNCTION ASTROLOGICALAGE_CYCLE% ()
DECLARE FUNCTION ASTROLOGICALAGE_CYCLE_X% (t AS SYSTEMTIME)
DECLARE FUNCTION ASTROLOGICALAGE_END& ()
DECLARE FUNCTION ASTROLOGICALAGE_END_X& (t AS SYSTEMTIME)
DECLARE FUNCTION ASTROLOGICALAGE_LEFT% ()
DECLARE FUNCTION ASTROLOGICALAGE_LEFT_X% (t AS SYSTEMTIME)
DECLARE FUNCTION ASTROLOGICALAGE_START& ()
DECLARE FUNCTION ASTROLOGICALAGE_START_X& (t AS SYSTEMTIME)
DECLARE FUNCTION ASTROLOGICALAGE_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION BIRTHSTONE$ ()
DECLARE FUNCTION BIRTHSTONE_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATETIME$ ()
DECLARE FUNCTION DATETIME_12$ ()
DECLARE FUNCTION DATETIME_12_SHORTYEAR$ ()
DECLARE FUNCTION DATETIME_12_SHORTYEAR_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATETIME_12_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATETIME_LONG$ ()
DECLARE FUNCTION DATETIME_LONG_12$ ()
DECLARE FUNCTION DATETIME_LONG_12_SHORTYEAR$ ()
DECLARE FUNCTION DATETIME_LONG_12_SHORTYEAR_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATETIME_LONG_12_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATETIME_LONG_SHORTYEAR$ ()
DECLARE FUNCTION DATETIME_LONG_SHORTYEAR_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATETIME_LONG_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATETIME_SHORT$ ()
DECLARE FUNCTION DATETIME_SHORTYEAR$ ()
DECLARE FUNCTION DATETIME_SHORTYEAR_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATETIME_SHORT_12$ ()
DECLARE FUNCTION DATETIME_SHORT_12_SHORTYEAR$ ()
DECLARE FUNCTION DATETIME_SHORT_12_SHORTYEAR_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATETIME_SHORT_12_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATETIME_SHORT_SHORTYEAR$ ()
DECLARE FUNCTION DATETIME_SHORT_SHORTYEAR_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATETIME_SHORT_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATETIME_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATE_SHORT$ ()
DECLARE FUNCTION DATE_SHORT_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DATE_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DAY%% ()
DECLARE FUNCTION DAY_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION DAYNAME$ ()
DECLARE FUNCTION DAYNAME_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION DAYOFWEEK%% ()
DECLARE FUNCTION DAYOFWEEK_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION HOLIDAY$ ()
DECLARE FUNCTION HOLIDAY_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION HOUR%% ()
DECLARE FUNCTION HOUR_12%% ()
DECLARE FUNCTION HOUR_12_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION HOUR_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION JULIANDAY& ()
DECLARE FUNCTION JULIANDAY_LONG# ()
DECLARE FUNCTION JULIANDAY_LONG_X# (t AS SYSTEMTIME)
DECLARE FUNCTION JULIANDAY_X& (t AS SYSTEMTIME)
DECLARE FUNCTION LEAPYEAR` ()
DECLARE FUNCTION LEAPYEAR_X` (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT$ ()
DECLARE FUNCTION LONGCOUNT_BAKTUN%% ()
DECLARE FUNCTION LONGCOUNT_BAKTUN_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_CALENDARROUND$ ()
DECLARE FUNCTION LONGCOUNT_CALENDARROUND_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_DAYS& ()
DECLARE FUNCTION LONGCOUNT_DAYS_LONG&& ()
DECLARE FUNCTION LONGCOUNT_DAYS_LONG_X&& (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_DAYS_X& (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_HAAB$ ()
DECLARE FUNCTION LONGCOUNT_HAAB_DATE%% ()
DECLARE FUNCTION LONGCOUNT_HAAB_DATE_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_HAAB_DAY% ()
DECLARE FUNCTION LONGCOUNT_HAAB_DAY_X% (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_HAAB_MONTH$ ()
DECLARE FUNCTION LONGCOUNT_HAAB_MONTH_NUM%% ()
DECLARE FUNCTION LONGCOUNT_HAAB_MONTH_NUM_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_HAAB_MONTH_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_HAAB_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_KATUN%% ()
DECLARE FUNCTION LONGCOUNT_KATUN_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_KIN%% ()
DECLARE FUNCTION LONGCOUNT_KIN_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_LONG$ ()
DECLARE FUNCTION LONGCOUNT_LONG_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_TUN%% ()
DECLARE FUNCTION LONGCOUNT_TUN_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_TZOLKIN$ ()
DECLARE FUNCTION LONGCOUNT_TZOLKIN_DATE%% ()
DECLARE FUNCTION LONGCOUNT_TZOLKIN_DATE_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_TZOLKIN_DAY$ ()
DECLARE FUNCTION LONGCOUNT_TZOLKIN_DAY_NUM%% ()
DECLARE FUNCTION LONGCOUNT_TZOLKIN_DAY_NUM_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_TZOLKIN_DAY_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_TZOLKIN_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_WINAL%% ()
DECLARE FUNCTION LONGCOUNT_WINAL_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION LONGCOUNT_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION LUNAR_AGE%% ()
DECLARE FUNCTION LUNAR_AGE_LONG! ()
DECLARE FUNCTION LUNAR_AGE_LONG_X! (t AS SYSTEMTIME)
DECLARE FUNCTION LUNAR_AGE_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION LUNAR_ANOMALISTIC! ()
DECLARE FUNCTION LUNAR_ANOMALISTIC_RAD! ()
DECLARE FUNCTION LUNAR_ANOMALISTIC_RAD_X! (t AS SYSTEMTIME)
DECLARE FUNCTION LUNAR_ANOMALISTIC_X! (t AS SYSTEMTIME)
DECLARE FUNCTION LUNAR_DISTANCE! ()
DECLARE FUNCTION LUNAR_DISTANCE_X! (t AS SYSTEMTIME)
DECLARE FUNCTION LUNAR_DRAW& (r AS SINGLE)
DECLARE FUNCTION LUNAR_DRAW_X& (t AS SYSTEMTIME, r AS SINGLE)
DECLARE FUNCTION LUNAR_ECLIPTIC_LATITUDE! ()
DECLARE FUNCTION LUNAR_ECLIPTIC_LATITUDE_X! (t AS SYSTEMTIME)
DECLARE FUNCTION LUNAR_ECLIPTIC_LONGITUDE! ()
DECLARE FUNCTION LUNAR_ECLIPTIC_LONGITUDE_X! (t AS SYSTEMTIME)
DECLARE FUNCTION LUNAR_PHASE$ ()
DECLARE FUNCTION LUNAR_PHASE_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION LUNAR_SYNODIC! ()
DECLARE FUNCTION LUNAR_SYNODIC_RAD! ()
DECLARE FUNCTION LUNAR_SYNODIC_RAD_X! (t AS SYSTEMTIME)
DECLARE FUNCTION LUNAR_SYNODIC_X! (t AS SYSTEMTIME)
DECLARE FUNCTION MILISECOND% ()
DECLARE FUNCTION MILISECOND_STR$ ()
DECLARE FUNCTION MILISECOND_STR_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION MILISECOND_X% (t AS SYSTEMTIME)
DECLARE FUNCTION MINUTE%% ()
DECLARE FUNCTION MINUTE_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION MONTH%% ()
DECLARE FUNCTION MONTH_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION MONTHNAME$ ()
DECLARE FUNCTION MONTHNAME_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION MONTH_DAYS%% (m AS _BYTE)
DECLARE FUNCTION PLATONICYEAR_CYCLE% ()
DECLARE FUNCTION PLATONICYEAR_CYCLE_X% (t AS SYSTEMTIME)
DECLARE FUNCTION PLATONICYEAR_END& ()
DECLARE FUNCTION PLATONICYEAR_END_X& (t AS SYSTEMTIME)
DECLARE FUNCTION PLATONICYEAR_LEFT% ()
DECLARE FUNCTION PLATONICYEAR_LEFT_X% (t AS SYSTEMTIME)
DECLARE FUNCTION PLATONICYEAR_START& ()
DECLARE FUNCTION PLATONICYEAR_START_X& (t AS SYSTEMTIME)
DECLARE FUNCTION SECOND%% ()
DECLARE FUNCTION SECOND_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION TICKCOUNT~& ()
DECLARE FUNCTION TIMEAFTER&& (t AS SYSTEMTIME, y AS INTEGER, m AS _BYTE, d AS _BYTE, h AS _BYTE, n AS _BYTE, s AS _BYTE)
DECLARE FUNCTION TIMEBEFORE&& (t AS SYSTEMTIME, y AS INTEGER, m AS _BYTE, d AS _BYTE, h AS _BYTE, n AS _BYTE, s AS _BYTE)
DECLARE FUNCTION TIMEBETWEEN&& (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMEBETWEEN_DAY&& (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMEBETWEEN_HOUR&& (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMEBETWEEN_MILLISECOND&& (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMEBETWEEN_MINUTE&& (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMEBETWEEN_MONTH&& (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMEBETWEEN_SECOND&& (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMEBETWEEN_STR$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIMEBETWEEN_STR_LONG$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIMEBETWEEN_WEEK&& (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMEBETWEEN_YEAR&& (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMECOMPARE%% (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMEISAFTER` (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMEISBEFORE` (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMEISEQUAL` (t1 AS SYSTEMTIME, t2 AS SYSTEMTIME)
DECLARE FUNCTION TIMENAME$ ()
DECLARE FUNCTION TIMENAME_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIMESTAMP$ ()
DECLARE FUNCTION TIMESTAMP_LONG$ ()
DECLARE FUNCTION TIMESTAMP_LONG_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIMESTAMP_LONG_SHORTYEAR$ ()
DECLARE FUNCTION TIMESTAMP_LONG_SHORTYEAR_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIMESTAMP_SHORT$ ()
DECLARE FUNCTION TIMESTAMP_SHORT_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIMESTAMP_SHORTYEAR$ ()
DECLARE FUNCTION TIMESTAMP_SHORTYEAR_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIMESTAMP_SHORT_SHORTYEAR$ ()
DECLARE FUNCTION TIMESTAMP_SHORT_SHORTYEAR_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIMESTAMP_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIMEZONE$ ()
DECLARE FUNCTION TIMEZONE_DST%% ()
DECLARE FUNCTION TIMEZONE_OFFSET! ()
DECLARE FUNCTION TIME_12$ ()
DECLARE FUNCTION TIME_12_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIME_LONG$ ()
DECLARE FUNCTION TIME_LONG_12$ ()
DECLARE FUNCTION TIME_LONG_12_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIME_LONG_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIME_SHORT$ ()
DECLARE FUNCTION TIME_SHORT_12$ ()
DECLARE FUNCTION TIME_SHORT_12_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIME_SHORT_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION TIME_X$ (t AS SYSTEMTIME)
DECLARE FUNCTION UNIXTIME& ()
DECLARE FUNCTION UNIXTIME_LONG&& ()
DECLARE FUNCTION UNIXTIME_LONG_X&& (t AS SYSTEMTIME)
DECLARE FUNCTION UNIXTIME_X& (t AS SYSTEMTIME)
DECLARE FUNCTION WEEK%% ()
DECLARE FUNCTION WEEKDAYINMONTH%% ()
DECLARE FUNCTION WEEKDAYINMONTH_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION WEEK_X%% (t AS SYSTEMTIME)
DECLARE FUNCTION YEAR% ()
DECLARE FUNCTION YEAR_CYCLE% ()
DECLARE FUNCTION YEAR_CYCLE_X% (t AS SYSTEMTIME)
DECLARE FUNCTION YEAR_SHORT%% ()
DECLARE FUNCTION YEAR_SHORT_X%% ()
DECLARE FUNCTION YEAR_X% ()
DECLARE FUNCTION ZODIAC$ ()
DECLARE FUNCTION ZODIAC_X$ (t AS SYSTEMTIME)

'windows type declarations
TYPE FILETIME 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms724284(v=vs.85).aspx
    dwLowDateTime AS _UNSIGNED LONG
    dwHighDateTime AS _UNSIGNED LONG
END TYPE
TYPE SYSTEMTIME 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms724950(v=vs.85).aspx
    wYear AS _UNSIGNED INTEGER
    wMonth AS _UNSIGNED INTEGER
    wDayofWeek AS _UNSIGNED INTEGER
    wDay AS _UNSIGNED INTEGER
    wHour AS _UNSIGNED INTEGER
    wMinute AS _UNSIGNED INTEGER
    wSecond AS _UNSIGNED INTEGER
    wMilliseconds AS _UNSIGNED INTEGER
END TYPE
TYPE TIME_ZONE_INFORMATION 'http://msdn.microsoft.com/en-us/library/windows/desktop/ms725481(v=vs.85).aspx
    Bias AS LONG
    StandardName AS STRING * 32
    StandardDate AS SYSTEMTIME
    StandardBias AS LONG
    DaylightName AS STRING * 32
    DaylightDate AS SYSTEMTIME
    DaylightBias AS LONG
END TYPE


'day constant definitions
CONST SUNDAY = 0
CONST MONDAY = 1
CONST TUESDAY = 2
CONST WEDNESDAY = 3
CONST THURSDAY = 4
CONST FRIDAY = 5
CONST SATURDAY = 6

'month constant definitions
CONST JANUARY = 1
CONST FEBRUARY = 2
CONST MARCH = 3
CONST APRIL = 4
CONST MAY = 5
CONST JUNE = 6
CONST JULY = 7
CONST AUGUST = 8
CONST SEPTEMBER = 9
CONST OCTOBER = 10
CONST NOVEMBER = 11
CONST DECEMBER = 12

'month length constant definitions
CONST DaysInJanuary = 31
CONST DaysInFebruary = 28
CONST DaysInMarch = 31
CONST DaysInApril = 30
CONST DaysInMay = 31
CONST DaysInJune = 30
CONST DaysInJuly = 31
CONST DaysInAugust = 31
CONST DaysInSeptember = 30
CONST DaysInOctober = 31
CONST DaysInNovember = 30
CONST DaysInDecember = 31

'time conversion constant definitions
CONST MillisecondsInSecond = 1000
CONST MillisecondsInMinute = 60000
CONST MillisecondsInHour = 3600000
CONST MillisecondsInDay = 86400000
CONST MillisecondsInYear = 31556952000
CONST SecondsInMinute = 60
CONST SecondsInHour = 3600
CONST SecondsInDay = 86400
CONST SecondsInYear = 31556952
CONST MinutesInHour = 60
CONST MinutesInDay = 1440
CONST MinutesInYear = 525949.2
CONST HoursInDay = 24
CONST HoursInYear = 8765.82
CONST DaysInWeek = 7
CONST DaysInMonth = 30
CONST DaysInYear = 365.2425
CONST MonthsInYear = 12
CONST YearsInDecade = 10
CONST YearsInCentury = 100
CONST YearsInMillenium = 1000

'mayan conversion constant definitions
CONST KinInWinal = 20
CONST KinInTun = 360
CONST KinInKatun = 7200
CONST KinInBaktun = 144000
CONST WinalInTun = 18
CONST WinalInKatun = 360
CONST WinalInBaktun = 7200
CONST TunInKatun = 20
CONST TunInBaktun = 360
CONST KatunInBaktun = 20

'time constant definitions
CONST MIDNIGHT = 0
CONST MORNING = 18000
CONST NOON = 43200
CONST AFTERNTOON = 43200
CONST EVENING = 61200
CONST NIGHT = 75600

'astral constant definitions
CONST ASTROLOGICALAGE_LENGTH = 2160
CONST JULIANDAY_LONGCOUNT_OFFSET = 584283
CONST JULIANDAY_LUNAR_LONGITUDE_OFFSET = 2451555.8
CONST JULIANDAY_LUNAR_OFFSET = 2451562.2
CONST JULIANDAY_LUNAR_SYNODIC_OFFSET = 2451550.1
CONST LUNAR_ANOMALISTIC_CYCLE_LENGTH = 27.55454988
CONST LUNAR_CYCLE_LENGTH = 29.530588853
CONST LUNAR_ECLIPTIC_LATITUDE_CYCLE_LENGTH = 27.212220817
CONST LUNAR_ECLIPTIC_LONGITUDE_CYCLE_LENGTH = 27.321582241
CONST PLATONICAGE_LENGTH = 26920
CONST t19700101 = 116444735972888098&&